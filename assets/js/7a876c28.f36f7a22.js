(self.webpackChunksonar_scala=self.webpackChunksonar_scala||[]).push([[878],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return c},kt:function(){return d}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return a?n.createElement(h,s(s({ref:t},c),{},{components:a})):n.createElement(h,s({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},80049:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var n=a(74034),r=a(79973),o=(a(67294),a(3905)),s=a(60139),i={title:"sbt-sonar"},l={unversionedId:"setup/sbt-sonar",id:"setup/sbt-sonar",isDocsHomePage:!1,title:"sbt-sonar",description:"sbt-sonar is an sbt plugin, which provides",source:"@site/docs/setup/sbt-sonar.mdx",sourceDirName:"setup",slug:"/setup/sbt-sonar",permalink:"/docs/setup/sbt-sonar",editUrl:"https://github.com/sonar-scala/website/edit/master/docs/setup/sbt-sonar.mdx",version:"current",frontMatter:{title:"sbt-sonar"},sidebar:"docs",previous:{title:"Sonar-scanner Properties",permalink:"/docs/setup/sonar-scanner-properties"},next:{title:"Pull Request Decoration",permalink:"/docs/setup/pr-decoration"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"External config",id:"external-config",children:[]},{value:"Execute SonarQube scan",id:"execute-sonarqube-scan",children:[]},{value:"sbt-release",id:"sbt-release",children:[]},{value:"Fallback mode",id:"fallback-mode",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Changelog",id:"changelog",children:[]}],c={toc:p};function u(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mwz/sbt-sonar"},"sbt-sonar")," is an sbt plugin, which provides\nan easy way to execute SonarQube analysis for Scala projects. It uses an\nembedded ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SonarSource/sonar-scanner-api"},"sonar-scanner API"),"\nunder the hood, which allows you to run SonarQube scan without the need to have\nthe sonar-scanner executable installed in your environment."),(0,o.kt)("div",{className:"alert alert--info",role:"alert"},"This plugin is particularly useful for CI when used together with e.g. sbt-release for an automated release process in your project, but it can be also used on its own."),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"sbt 0.13.5+ or 1.0+"),(0,o.kt)("li",{parentName:"ul"},"Scala 2.11/2.12"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.sonarqube.org/downloads"},"SonarQube")," server - see my\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sonar-scala-docker"},"sonar-scala-docker")," repository,\nwhich provides docker-compose recipes and docker images for out-of-the-box\nSonarQube instance with sonar-scala which brings support for\n",(0,o.kt)("a",{parentName:"li",href:"http://www.scala-lang.org"},"Scala"),",\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/scoverage/scalac-scoverage-plugin"},"Scoverage")," (code\ncoverage metrics), ",(0,o.kt)("a",{parentName:"li",href:"https://scalastyle.beautiful-scala.com"},"Scalastyle")," and\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/sksamuel/scapegoat"},"Scapegoat")," (static code analysis).\nAlso read the ",(0,o.kt)("a",{parentName:"li",href:"/docs/setup/getting-started"},"Getting Started")," guide.",(0,o.kt)("br",{parentName:"li"}),"Alternatively, see the instructions for manual installation\n",(0,o.kt)("a",{parentName:"li",href:"https://docs.sonarqube.org/latest/setup/get-started-2-minutes"},"here"),".")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"To install this plugin in your project, add the following to your\n",(0,o.kt)("inlineCode",{parentName:"p"},"./project/plugins.sbt")," file:"),(0,o.kt)("code",{className:"language-scala"},'addSbtPlugin("com.github.mwz" % "sbt-sonar" % "'+s.f3+'")'),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"You can define your project properties either in the external config file\n",(0,o.kt)("inlineCode",{parentName:"p"},"sonar-project.properties"),", which should be located in the root directory of\nyour project as explained in\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.sonarqube.org/latest/analysis/scan/sonarscanner"},"SonarQube Scanner guide"),"\nor directly in sbt. By default, the plugin expects the properties to be defined\nin the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarProperties")," settings key in sbt, which already comes with the\nfollowing set of ",(0,o.kt)("strong",{parentName:"p"},"predefined")," properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.projectName")," - your project name defined in the ",(0,o.kt)("inlineCode",{parentName:"li"},"name")," sbt setting\nkey"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.projectKey")," - your project name transformed into a lowercase and\ndash-separated value"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.sourceEncoding")," - UTF-8"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.sources")," - default Scala source directory relative to the root of\nyour project (usually ",(0,o.kt)("inlineCode",{parentName:"li"},"src/main/scala"),", uses the value of\n",(0,o.kt)("inlineCode",{parentName:"li"},"scalaSource in Compile")," defined by sbt)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.tests")," - default Scala tests directory relative to the root of your\nproject (usually ",(0,o.kt)("inlineCode",{parentName:"li"},"src/test/scala"),", uses the value of ",(0,o.kt)("inlineCode",{parentName:"li"},"scalaSource in Test"),"\ndefined by sbt)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.scala.version")," - defines the version of Scala used in your project\n(i.e. ",(0,o.kt)("inlineCode",{parentName:"li"},"scalaVersion"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.scala.scoverage.reportPath")," - relative path to the scoverage report\n(e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"target/scala-2.12/scoverage-report/scoverage.xml"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"sonar.scala.scapegoat.reportPath")," - relative path to the scapegoat report\n(e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"target/scala-2.12/scapegoat-report/scapegoat.xml"),")")),(0,o.kt)("p",null,"Usually, the default settings are sufficient for majority of the projects and\nyou rarely need to change any of them, unless your project is set-up in an\nunconventional way or contains multiple modules."),(0,o.kt)("p",null,"To add more properties to the existing config or to overwrite any of the\nexisting ones e.g. to set up a multi-module project, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"++="),"\noperator, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import sbtsonar.SonarPlugin.autoImport.sonarProperties\n\nsonarProperties ++= Map(\n  "sonar.modules" -> "module1,module2",\n  "module1.sonar.projectName" -> "Module 1",\n  "module2.sonar.projectName" -> "Module 2"\n)\n')),(0,o.kt)("p",null,"To overwrite the entire config provided by default, use the ",(0,o.kt)("inlineCode",{parentName:"p"},":=")," operator, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import sbtsonar.SonarPlugin.autoImport.sonarProperties\n\nsonarProperties := Map(\n  "sonar.host.url" -> "https://your-sonarqube-server.com",\n  "sonar.projectName" -> "Project Name",\n  "sonar.projectKey" -> "project-name",\n  "sonar.sources" -> "src/main/scala",\n  "sonar.tests" -> "src/test/scala",\n  "sonar.junit.reportPaths" -> "target/test-reports",\n  "sonar.sourceEncoding" -> "UTF-8",\n  "sonar.scala.scoverage.reportPath" -> "target/scala-2.12/scoverage-report/scoverage.xml",\n  "sonar.scala.scapegoat.reportPath" -> "target/scala-2.12/scapegoat-report/scapegoat.xml"\n)\n')),(0,o.kt)("h3",{id:"external-config"},"External config"),(0,o.kt)("p",null,"To use the external ",(0,o.kt)("inlineCode",{parentName:"p"},"sonar-project.properties")," file instead, you can set the\n",(0,o.kt)("inlineCode",{parentName:"p"},"sonarUseExternalConfig")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," and you can skip entirely setting the\n",(0,o.kt)("inlineCode",{parentName:"p"},"sonarProperties")," value, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import sbtsonar.SonarPlugin.autoImport.sonarUseExternalConfig\n\nsonarUseExternalConfig := true\n")),(0,o.kt)("h3",{id:"execute-sonarqube-scan"},"Execute SonarQube scan"),(0,o.kt)("p",null,"To run SonarQube analysis, execute the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"sonarScan"))," sbt task in your project.\nDepending on the configuration option you have chosen, the plugin will update\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"sonar.projectVersion")," property to your current project version either in\n",(0,o.kt)("inlineCode",{parentName:"p"},"sonar-project.properties")," file or in the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarProperties")," in sbt config and it\nwill run the SonarQube scan printing the progress to sbt console."),(0,o.kt)("p",null,"Also, you can overwrite/set\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.sonarqube.org/display/SONAR/Analysis+Parameters"},"sonarProperties"),"\nvia system properties (java options) when you execute ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarScan")," command, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sbt -Dsonar.projectName=MyProjectName sonarScan\n")),(0,o.kt)("div",{className:"alert alert--warning",role:"alert"},"Remember to set the ",(0,o.kt)("inlineCode",null,"sonar.host.url")," environment property before you execute the analysis."),(0,o.kt)("p",null,"You can do that either by adding it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarProperties")," settings in sbt (as\nshown in the examples above), or you can set it via a system property, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sbt -Dsonar.host.url=https://your-sonarqube-server.com sonarScan\n")),(0,o.kt)("p",null,"By default this property is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:9000"),"."),(0,o.kt)("p",null,"sbt-sonar can also read the URL of your SonarQube instance from the\n",(0,o.kt)("inlineCode",{parentName:"p"},"SONAR_HOST_URL")," environment variable instead of system properties. If both\nvalues are present, the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonar.host.url")," system property takes precedence over\nthe environment variable."),(0,o.kt)("h3",{id:"sbt-release"},"sbt-release"),(0,o.kt)("p",null,"This plugin can be also easily used with\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/sbt/sbt-release"},"sbt-release")," by wrapping the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarScan"),"\ntask in a ",(0,o.kt)("inlineCode",{parentName:"p"},"releaseStepTask")," in the following way:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala",metastring:"{9}","{9}":!0},'import sbtsonar.SonarPlugin.autoImport.sonarScan\n\nreleaseProcess := Seq[ReleaseStep](\n  releaseStepCommand("coverageOn"),\n  releaseStepTask(test),\n  releaseStepCommand("coverageOff"),\n  releaseStepTask(coverageReport),\n  releaseStepTask(scapegoat),\n  releaseStepTask(sonarScan),\n)\n')),(0,o.kt)("h3",{id:"fallback-mode"},"Fallback mode"),(0,o.kt)("p",null,"It is possible to make the plugin call through to a standalone\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.sonarqube.org/latest/analysis/scan/sonarscanner"},"sonar-scanner"),"\nexecutable, if that's what you prefer, for any reasons. This was the default\nbehaviour before version 2.0 and in case you experience any issues with 2.x, you\ncan fall back to using the standalone mode."),(0,o.kt)("p",null,"In order to do that, you need to have the\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.sonarqube.org/latest/analysis/scan/sonarscanner"},"sonar-scanner"),"\ninstalled on your CI server or locally, if you intend to run the analysis on\nyour machine. You also need to make sure you have defined the\n",(0,o.kt)("inlineCode",{parentName:"p"},"SONAR_SCANNER_HOME")," environmental variable, or ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarScanner.home")," system\nproperty, and updated the global settings in\n",(0,o.kt)("inlineCode",{parentName:"p"},"$SONAR_SCANNER_HOME/conf/sonar-scanner.properties")," to point to your SonarQube\ninstance (you can also do that by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonar.host.url")," via system\nproperties, as shown above)."),(0,o.kt)("p",null,"To enable the fallback mode set the ",(0,o.kt)("inlineCode",{parentName:"p"},"sonarUseSonarScannerCli")," seting to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),",\ne.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import sbtsonar.SonarPlugin.autoImport.sonarUseSonarScannerCli\n\nsonarUseSonarScannerCli := true\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Please see the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mwz/sbt-sonar/tree/master/src/sbt-test/sbt-sonar"},"tests"),"\ndirectory for some example projects. You can find there examples of projects\nusing sbt 0.13 and 1.0, Scala 2.11, 2.12, a multi-module project and a project\nusing an external properties file."),(0,o.kt)("h2",{id:"changelog"},"Changelog"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"2.2.0")," (05.07.2020) - Improve compatibility with\n",(0,o.kt)("a",{parentName:"li",href:"https://docs.sonarqube.org/latest/analysis/languages/scala"},"SonarScala"),"\nplugin (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/pull/117"},"#117"),"). This release adds\na new setting key (",(0,o.kt)("inlineCode",{parentName:"li"},"sonarExpectSonarQubeCommunityPlugin"),"), which allows\ntoggling compatibility between ",(0,o.kt)("a",{parentName:"li",href:"https://sonar-scala.com"},"sonar-scala")," and\n",(0,o.kt)("a",{parentName:"li",href:"https://docs.sonarqube.org/latest/analysis/languages/scala"},"SonarScala"),"\nplugins. This change is backwards compatible and the\n",(0,o.kt)("inlineCode",{parentName:"li"},"sonarExpectSonarQubeCommunityPlugin")," setting is set to ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," by default. If\nyou're targeting the SonarScala plugin, toggling this setting to ",(0,o.kt)("inlineCode",{parentName:"li"},"false"),"\nchanges the default Scoverage and Scapegoat property names, i.e.:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scala.scoverage.reportPath")," changes to\n",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scala.coverage.reportPaths")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scala.scapegoat.reportPath")," changes to\n",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scala.scapegoat.reportPaths")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"2.1.1")," (25.04.2020) - Fix missing sonar.projectVersion property\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/pull/104"},"#104"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"2.1.0")," (16.10.2019) - Allow to use ",(0,o.kt)("inlineCode",{parentName:"li"},"SONAR_HOST_URL")," environment variable to\ndefine SonarQube instance URL instead of the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.host.url")," system property.\nIf both values are present, the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.host.url")," system property takes\nprecedence over the environment variable.\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/SonarSource/sonar-scanner-api/pull/69"},"sonar-scanner-api#69"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"2.0.0")," (17.06.2019) - Use an embedded sonar-scanner\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/pull/34"},"#34"),") \ud83c\udf8a This version\nremoves the dependency on having the standalone sonar-scanner-cli installed.\nTo upgrade from 1.x please define the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.host.url")," property explicitly\nbefore running the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonarScan")," task (see the\n",(0,o.kt)("a",{parentName:"li",href:"#execute-sonarqube-scan"},"Execute SonarQube section")," for more details). If you\nwant to fallback to the default behaviour from 1.x, which makes the plugin\ncall through to the standalone sonar-scanner, you can set the\n",(0,o.kt)("inlineCode",{parentName:"li"},"sonarUseSonarScannerCli")," setting to ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," (see the\n",(0,o.kt)("a",{parentName:"li",href:"#fallback-mode"},"Fallback mode")," section for more details)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.7.0")," (06.06.2019) - Renamed deprecated ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scoverage.reportPath"),"\nproperty to ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scala.scoverage.reportPath"),"\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/pull/30"},"#30"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.6.0")," (31.12.2018) - Set automatically the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.tests")," property\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/issues/25"},"#25"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.5.0")," (14.09.2018) - Allow sbt-sonar to run on Windows\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/issues/16"},"#16"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.4.0")," (14.09.2018) - Set automatically the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar.scala.version")," property\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/issues/13"},"#13"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.3.0")," (06.02.2018) - Allow to set sonar properties via system properties\n(",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/issues/7"},"#7"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.2.0")," (31.01.2018) - Use ",(0,o.kt)("inlineCode",{parentName:"li"},"SONAR_SCANNER_HOME/bin")," for lookup of the\nsonar-scanner executable (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/issues/4"},"#4"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.1.0")," (19.01.2018) - Search for ",(0,o.kt)("inlineCode",{parentName:"li"},"sonar-scanner")," home directory in system\nproperties (",(0,o.kt)("inlineCode",{parentName:"li"},"sonarScanner.home"),") if ",(0,o.kt)("inlineCode",{parentName:"li"},"SONAR_SCANNER_HOME")," environmental\nvariable is not defined (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mwz/sbt-sonar/issues/1"},"#1"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1.0.0")," (06.11.2017) - Support for sbt 1.0 \ud83d\udcaa default scoverage and\nscapegoat report paths added automatically to the ",(0,o.kt)("inlineCode",{parentName:"li"},"sonarProperties")," config;\nadded unit and sbt tests."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"0.3.1")," (03.01.2017) - Updated the scope of ",(0,o.kt)("inlineCode",{parentName:"li"},"scalaSource")," setting key to\nresolve scoping ambiguity with some other plugins."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"0.3.0")," (02.01.2017) - Defined a set of default project settings in the\n",(0,o.kt)("inlineCode",{parentName:"li"},"sonarProperties")," config key."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"0.2.0")," (22.12.2016) - Added the ability to define sonar project properties\ndirectly in sbt."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"0.1.0")," (12.12.2016) - First release of the plugin! \ud83c\udf89")))}u.isMDXComponent=!0},60139:function(e){"use strict";e.exports={f3:"2.2.0"}}}]);